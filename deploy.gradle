apply plugin: 'maven'
apply plugin: 'signing'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

tasks.register('javadocJar', Jar) {
    classifier = 'javadoc'
    from javadoc
}

tasks.register('sourcesJar', Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

javadoc {
    def generateJavadoc = project.hasProperty("generateJavadoc")
    onlyIf { (isReleaseVersion || gradle.taskGraph.hasTask("uploadArchives")) || generateJavadoc }

    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
}

signing {
    required { isReleaseVersion || gradle.taskGraph.hasTask("uploadArchives") }
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                url 'https://github.com/winrid/gix/'

                scm {
                    connection 'scm:git:git@github.com:winrid/gix.git'
                    developerConnection 'scm:git:git@github.com:winrid/gix.git'
                    url 'git@github.com:winrid/gix.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'winrid'
                        name 'Devon Winrick'
                        url 'https://winricklabs.com'
                    }
                }
            }
        }
    }
}